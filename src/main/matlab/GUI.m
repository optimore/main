% Här måste vi kunna läsa/skriva testdata ifrån en fil.

function GUI

close all;

f = figure('Visible','on','Position',[160,200,1200,800]);

p = uipanel('Title','Data creation',...
    'Position',[0.49 0.63 0.41 0.32]);

testdatagen    = uicontrol('Style','pushbutton',...
    'String','Create test data', 'Units','normalized','Position',[0.805,0.66,0.08,0.05],...
    'Callback',@testdatagen_callback);

testdataload    = uicontrol('Style','pushbutton',...
    'String','Load test data', 'Units','normalized','Position',[0.5,0.44,0.2,0.05],...
    'Callback',@testdataload_callback);

    function testdataload_callback(source,eventdata)
        
    end

testdatasave    = uicontrol('Style','pushbutton',...
    'String','Save test data', 'Units','normalized','Position',[0.5,0.39,0.2,0.05],...
    'Callback',@testdatasave_callback);

    function testdatasave_callback(source,eventdata)
        
    end

testresultsave    = uicontrol('Style','pushbutton',...
    'String','Save test results', 'Units','normalized','Position',[0.5,0.34,0.2,0.05],...
    'Callback',@testdatasave_callback);

    function testresultsave_callback(source,eventdata)
        
    end

run_tabu    = uicontrol('Style','pushbutton',...
    'String','Run tabu search', 'Units','normalized','Position',[0.72,0.34,0.2,0.05],...
    'Callback',@run_tabu_callback, ...
    'Enable','off');

    function run_tabu_callback(source,eventdata)
        
    end

run_lns    = uicontrol('Style','pushbutton',...
    'String','Run large neighborhood search', 'Units','normalized','Position',[0.72,0.39,0.2,0.05],...
    'Callback',@run_lns_callback, ...
    'Enable','off');

    function run_lns_callback(source,eventdata)
        
    end

run_lp    = uicontrol('Style','pushbutton',...
    'String','Run MIP method', 'Units','normalized','Position',[0.72,0.44,0.2,0.05],...
    'Callback',@run_lp_callback, ...
    'Enable','off');

    function run_lp_callback(source,eventdata)
        
    end

ha1 = axes('Units','pixels', 'Units','normalized','Position',[0.05,0.4,0.4,0.55]);

distribution_group = uibuttongroup(f,'Title','Dependency distribution',...
    'Position',[.5 .85 .20 .08]);

distribution2_group = uibuttongroup(f,'Title','Maximum time between dependent tasks',...
    'Position',[.5 .75 .20 .08]);

distribution3_group = uibuttongroup(f,'Title','Starting time and deadline distribution',...
    'Position',[.5 .65 .20 .08]);

level_selector = uibuttongroup(f,'Title','Data difficulty level',...
    'Position',[.5 .5 .20 .08]);

levela = uicontrol(level_selector,'Style','radiobutton','String','Level A',...
    'Units','normalized',...
    'Position',[.1 .3 .6 .4], ...
    'Callback',@lv1_callback, ...
    'Tag', 'rab1');

    function lv1_callback(source,eventdata)
        
    end

levelb = uicontrol(level_selector,'Style','radiobutton','String','Level B',...
    'Units','normalized',...
    'Position',[.4 .3 .6 .4], ...
    'Callback',@lv2_callback, ...
    'Tag', 'rab1');

    function lv2_callback(source,eventdata)
        
    end

levelc = uicontrol(level_selector,'Style','radiobutton','String','Level C',...
    'Units','normalized',...
    'Position',[.7 .3 .6 .4], ...
    'Callback',@lv3_callback, ...
    'Tag', 'rab1');

    function lv3_callback(source,eventdata)
        
    end

distr1 = uicontrol(distribution_group,'Style','radiobutton','String','Normal',...
    'Units','normalized',...
    'Position',[.1 .3 .6 .4], ...
    'Callback',@distr1_callback, ...
    'Tag', 'rab1');
distr2 = uicontrol(distribution_group,'Style','radiobutton','String','Uniform',...
    'Units','normalized',...
    'Position',[.6 .3 .6 .4], ...
    'Callback',@distr2_callback, ...
    'Tag', 'rab2');

distr3 = uicontrol(distribution2_group,'Style','radiobutton','String','Normal',...
    'Units','normalized',...
    'Position',[.1 .3 .6 .4], ...
    'Callback',@distr3_callback, ...
    'Tag', 'rab1');
distr4 = uicontrol(distribution2_group,'Style','radiobutton','String','Uniform',...
    'Units','normalized',...
    'Position',[.6 .3 .6 .4], ...
    'Callback',@distr4_callback, ...
    'Tag', 'rab2');
distr5 = uicontrol(distribution3_group,'Style','radiobutton','String','Normal',...
    'Units','normalized',...
    'Position',[.1 .3 .6 .4], ...
    'Callback',@distr5_callback, ...
    'Tag', 'rab1');
distr6 = uicontrol(distribution3_group,'Style','radiobutton','String','Uniform',...
    'Units','normalized',...
    'Position',[.6 .3 .6 .4], ...
    'Callback',@distr6_callback, ...
    'Tag', 'rab2');

htext1  = uicontrol('Style','text','String','Spatial width:', 'Units','normalized',...
    'Position',[0.7,0.9,0.10,0.03]);

htext2  = uicontrol('Style','text','String','Spatial width:', 'Units','normalized',...
    'Position',[0.7,0.7,0.10,0.03]);

htext3  = uicontrol('Style','text','String','Spatial width:', 'Units','normalized',...
    'Position',[0.7,0.8,0.10,0.03]);

htext3  = uicontrol('Style','text','String','Sparseness:', 'Units','normalized',...
    'Position',[0.81,0.9,0.08,0.03]);

htext4  = uicontrol('Style','text','String','Level A data', 'Units','normalized',...
    'Position',[0.32,0.25,0.10,0.03]);

htext5  = uicontrol('Style','text','String','Level B data', 'Units','normalized',...
    'Position',[0.55,0.25,0.10,0.03]);

htext6  = uicontrol('Style','text','String','Level C data', 'Units','normalized',...
    'Position',[0.78,0.25,0.10,0.03]);
% txtbox1 = uicontrol('Style','edit',...
%     'String',num2str(12), 'Units','normalized',...
%     'Position',[0.735 0.82 0.03 0.02],...
%     'Callback',@txtbox1_callback);

uicontrol(f,'Style','slider',...
                'Min',0,'Max',100,'Value',25,...
                'SliderStep',[0.05 0.2], ...
                'Units','normalized',...
                'Position',[0.71 0.87 0.08 0.02]);
            
uicontrol(f,'Style','slider',...
                'Min',0,'Max',100,'Value',25,...
                'SliderStep',[0.05 0.2], ...
                'Units','normalized',...
                'Position',[0.81 0.87 0.08 0.02]);


uicontrol(f,'Style','slider',...
                'Min',0,'Max',100,'Value',25,...
                'SliderStep',[0.05 0.2], ...
                'Units','normalized',...
                'Position',[0.71 0.67 0.08 0.02]);

uicontrol(f,'Style','slider',...
                'Min',0,'Max',100,'Value',25,...
                'SliderStep',[0.05 0.2], ...
                'Units','normalized',...
                'Position',[0.71 0.77 0.08 0.02]);



lb1 = uicontrol(f,'Style','listbox',...
                'String',{'Test data 1','Test data 2','Test data 3','Test data 4'},...
                'Units','normalized',...
                'Position',[0.28 0.05 0.2 0.2],'Value',1);
            
lb2 = uicontrol(f,'Style','listbox',...
                'String',{'Test data 1','Test data 2','Test data 3','Test data 4'},...
                'Units','normalized',...
                'Position',[0.5 0.05 0.2 0.2],'Value',1, ...
                'Enable','off');
            
lb3 = uicontrol(f,'Style','listbox',...
                'String',{'Test data 1','Test data 2','Test data 3','Test data 4'},...
                'Units','normalized',...
                'Position',[0.72 0.05 0.2 0.2],'Value',1, ...
                'Enable','off');

    function txtbox1_callback(source,eventdata)
        
    end


    function txtbox2_callback(source,eventdata)
        
    end

    function txtbox3_callback(source,eventdata)
        
    end

    function distr1_callback(source,eventdata)
        
    end

    function distr2_callback(source,eventdata)
        
    end

    function distr3_callback(source,eventdata)
        
    end

    function distr4_callback(source,eventdata)
        
    end

    function distr5_callback(source,eventdata)
        
    end

    function distr6_callback(source,eventdata)
        
    end

    function testdatagen_callback(source,eventdata)
        
    end


plot(1./(1:0.1:10));
title('Rate of convergence vs iterations');
xlabel('Number of iterations');
ylabel('Objective function');







    function load_file
        
    end

    function save_file
        
    end

    % Funktion som skriver ut inläst fil, om filen sparades korrekt, ritar
    % ut resultatet av en körning, etc.
    function print_correct
        
        
    end


end
