function [status,data] = DoAction(model,data,actionList,costList,tabuList,logfile )
%DOACTION Summary of this function goes here
%   Detailed explanation goes here


status = 0;
try
    
    % 1. Find list of actions generating lowest cost
    [sortedCosts, indexes] = sort(costList);
    
    % Loop through min-Solutions in ascending order
    for i = 1:length(costList)
      
        notintabu = 1;
        index = indexes(i);
        actionSolution = actionList{index}.actionSolution(:,2);
        
        % Compare solution with tabu list solutions
        for j = 1:length(tabuList)
            tabuSolution = tabuList{j};
            
                                   tabuSolution
                actionSolution
            
            % Break if action in tabulist
            if isequal(tabuSolution, actionSolution)
                notintabu = 0
                tabuSolution
                actionSolution
                j = length(tabuList);
            end
        end
        
        
        if notintabu == 1
            
            % 4. Add action to tabu list
            actioncell = num2cell(actionSolution, 1);
            tabuList(2:end) = tabuList(1:end-1);
            tabuList(1) = actioncell;
            tabuList{1}
            
            
            % 3 Perform action
            data.tasks(:,6) = actionList{index}.actionSolution(:,2);
            
            fprintf(logfile, ['Calculated ',num2str(length(costList)), ...
                ' actions. Lowest cost is ', num2str(sortedCosts(i)),'.\n']);
            
            i = length(costList);
        end
        
    end
    
    status = 1;
catch err
    
    
    status = -1;
end



end

