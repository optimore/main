% MAIN launcher script, simulating GUI code

clc; close all;

% 1. This data is generated by gui or test launcher scripts:
% dataParameters = struct('name',{},'path',{});

% 1.1 Create data object when user selects it:
% dataObj1.name = 'A2';
% dataObj1.path = 'src/test/testdata/New/A25_2015-11-11T06-31-36/';
% A2_2015-10-30T15-14-12/';
% dataParameters{1} = dataObj1;

% Models, with selected phases
models.m1 = [1,2,3,4];
models.m2 = [5,6,7];
models.m3 = [6,7];


% 2. Create models when user selects them:
modelParameters = struct( ...
    'tabu', struct('active',1,'initial',1,'phases',models.m3), ...
    'LNS' , struct('active',0,'initial',1,'phases',[1]), ...
    'ampl', struct('active',0,'initial',1,'phases',[1]));



disp('------------------ OPTIMORE LAUNCHED ------------------')
disp('please select one option bellow by entering a number:')
disp('1. Create data gui. 2. Launch main GUI')
disp('3. Launch a fix solution sequence. 4. Print latest result. 5. Quit')
disp('-------------------------------------------------------')
noQuit = 1;

while noQuit
    try
        prompt = 'Select one option: '; 
        nr = input(prompt,'s');
        disp(' ');
        switch num2str(nr)
            case '1',
                addpath(genpath('src/main/guitest/createdatagui'));
                GUI
                rmpath(genpath('src/main/guitest/createdatagui'));
            case '2',
                test_maingui;
            case '3',
                
                prompt = 'Select data (A, B, E, F: 1-100: as A1,B24 etc.): '; 
                selected_data = input(prompt,'s');

                pathdir = 'src/test/testdata/New/';
                DataDir=dir([pathdir,'*_*']);
                pathname = [];
                filename = [];
                for i = 1:length({DataDir.name})
                    thisfilename = cellstr(getfield(DataDir,{i},'name'));
                    pathname = [pathname; strcat(pathdir,thisfilename,'/')];
                    filename = [filename; thisfilename];
                end


                % SELECT DATA:
                % listofindexes = [];
                dataParameters = struct('name',{},'path',{});
                foundstr = 0;
                
                for ii=1:length(filename) 
                    name = strtok(filename(ii),'_');   
                    if numel(char(name)) == numel(char(selected_data)) && ...
                            all(lower(char(name)) == lower(char(selected_data)))
                        dataObj.name = char(filename(ii));
                        dataObj.path = char(pathname(ii));
                        dataParameters{1} = dataObj;  
                        foundstr=1;
                    end
                end
                
                % listofcomplexisies = [];
                % for iii=listofindexes
                %     listofcomplexisies = [];
                % end

                % for i = 1:length(filename)
                %    
                %     dataObj.name = filename(i);
                %     dataObj.path = [pathdir,pathname(i)];
                %     dataParameters{i} = dataObj;  
                % end

                if foundstr
                    % 3. run launcher
                    status = mainlauncher(dataParameters, modelParameters);
                    % 4. Print errors if they occure:
                    SNames = fieldnames(status); 
                    nFields = length(SNames);
                    for i = 1:nFields
                        % SNames{i}
                        if (status.(SNames{i})==-1)
                           type(status.logPath);
                        end
                    end
                else
                    disp(['No data found for: ',selected_data,'. Try again.'])
                end
                
            case '4',
                disp('Printing results:')
                respath = 'target/results/';
                d=dir([respath,'results*']);
                [~, index] = max([d.datenum]);
                dirpath = [respath,d(index).name];
                files = {ls(dirpath)};
                filepath=[dirpath,'/',strtrim(files{1})];
                type(filepath)
                    
            case '5',
                disp('Quitting');
                pause(0.5);
                clc
                noQuit = 0;
            case '6',
                disp('Creating new model: enter model iterator id: (THIS IS NOT IMPLEMENTED YET)');
                try
                selected_data = str2num(input(prompt,'s'));
                catch err
                    disp('wrong') 
                end
                
                noQuit = 0;
            otherwise,
                noQuit = 1;
        end
    catch err
        disp(err.stack)
    end
end

